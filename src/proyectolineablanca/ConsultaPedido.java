/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyectolineablanca;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Calendar;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Luis Montoya
 */
public class ConsultaPedido extends javax.swing.JInternalFrame implements Runnable {

    /**
     * Creates new form ConsultaPedido
     */
    /**
     * ************************************************************
     * VARIABLES
     **********************************************************
     */
    private final String conexion = "jdbc:mysql://localhost/linea_blanca";
    private final String user = "root";
    private final String pass = "";
    Thread t1, t2;
    Calendar fecha = Calendar.getInstance();

    /**
     * *******************************************************************************************************************************
     */

    public ConsultaPedido() {
        initComponents();
        txtNo_pedido.setEditable(false);
        if(InicioSesion.estadoUsuario.equals("Inactivo")){
            btnActualizarEstado.setEnabled(false);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated">
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTablaConsulta = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex,int columnIndex){return false;}
        };
        jLabel2 = new javax.swing.JLabel();
        txtBusNoPedido = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtBusPedido = new javax.swing.JTextField();
        txtBusAdmin = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtNo_pedido = new javax.swing.JTextField();
        btnActualizarEstado = new javax.swing.JButton();
        comboBEstado = new javax.swing.JComboBox<>();

        setClosable(true);
        setMaximizable(true);
        setResizable(true);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Consulta de pedidos", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI Emoji", 3, 18), new java.awt.Color(0, 51, 51))); // NOI18N

        jTablaConsulta.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jTablaConsulta.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTablaConsultaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTablaConsulta);

        jLabel2.setText("Busqueda por No. Pedido:");

        txtBusNoPedido.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBusNoPedidoKeyReleased(evt);
            }
        });

        jLabel3.setText("Busqueda por pedidos: (Activos/Entregados)");

        jLabel4.setText("Busqueda por id administrador:");

        txtBusPedido.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBusPedidoKeyReleased(evt);
            }
        });

        txtBusAdmin.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBusAdminKeyReleased(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Actualizar estado", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI Emoji", 3, 18), new java.awt.Color(0, 51, 51))); // NOI18N

        jLabel1.setText("Actualizar el estado de la entrega:");

        jLabel5.setText("No. Pedido:");

        jLabel6.setText("Estado:");

        btnActualizarEstado.setBackground(new java.awt.Color(0, 51, 51));
        btnActualizarEstado.setForeground(new java.awt.Color(255, 255, 255));
        btnActualizarEstado.setText("Actualizar");
        btnActualizarEstado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarEstadoActionPerformed(evt);
            }
        });

        comboBEstado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Activo", "Entregado" }));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(386, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtNo_pedido, javax.swing.GroupLayout.DEFAULT_SIZE, 230, Short.MAX_VALUE)
                            .addComponent(comboBEstado, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(214, 214, 214))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(359, 359, 359))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(btnActualizarEstado)
                        .addGap(410, 410, 410))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(40, 40, 40)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtNo_pedido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(comboBEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addComponent(btnActualizarEstado)
                .addGap(38, 38, 38))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 947, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtBusAdmin))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtBusPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtBusNoPedido)
                        .addGap(67, 67, 67))
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtBusPedido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(txtBusNoPedido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtBusAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtBusPedidoKeyReleased(java.awt.event.KeyEvent evt) {
        // TODO add your handling code here:
        filtrarDatos(txtBusPedido.getText(), 1);
    }

    private void txtBusAdminKeyReleased(java.awt.event.KeyEvent evt) {
        // TODO add your handling code here:
        filtrarDatos(txtBusAdmin.getText(), 2);
    }

    private void txtBusNoPedidoKeyReleased(java.awt.event.KeyEvent evt) {
        // TODO add your handling code here:
        filtrarDatos(txtBusNoPedido.getText(), 3);
    }

    private void jTablaConsultaMouseClicked(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
        Object valor_constante = jTablaConsulta.getValueAt(jTablaConsulta.getSelectedRow(), 0);
        try (Connection conn = DriverManager.getConnection(conexion, user, pass)) {
            Statement sts = conn.createStatement();
            sts.execute("SELECT * FROM pedido WHERE no_pedido = " + valor_constante + ";");
            ResultSet rs = sts.getResultSet();
            if (rs.next()) {
                txtNo_pedido.setText(rs.getString("no_pedido"));
            }
            conn.close();
        } catch (SQLException ex) {
            System.out.println(ex.getNextException());
        }
    }

    private void btnActualizarEstadoActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        t1 = new Thread(this, "actualizar");
        t2 = new Thread(this, "registrar");
        t1.start();
        t2.start();
        txtBusPedido.setText("");
        txtBusAdmin.setText("");
        txtBusNoPedido.setText("");
    }

    @Override
    public void run() {
        try (Connection conn = DriverManager.getConnection(conexion, user, pass)) {
            if (Thread.currentThread().getName().equals("actualizar")) {
                Statement sts = conn.createStatement();
                String update = "UPDATE pedido SET estado = '" + String.valueOf(comboBEstado.getSelectedItem())
                        + "' WHERE no_pedido = " + Integer.parseInt(txtNo_pedido.getText()) + ";";
                sts.executeUpdate(update);
                JOptionPane.showMessageDialog(null, "Se ha hecho el cambio");
                conn.close();
            }
            if (Thread.currentThread().getName().equals("registrar")) {
                Statement sts = conn.createStatement();
                sts.addBatch(
                        "INSERT INTO entregasxpedido (no_pedido, id_RFCAdmn, mes, dia, anio) VALUES ("
                        + Integer.parseInt(txtNo_pedido.getText()) + "," + InicioSesion.idAdmin
                        + "," + fecha.get(Calendar.MONTH) + "," + fecha.get(Calendar.DAY_OF_MONTH) + "," + fecha.get(Calendar.YEAR) + ");");
                sts.executeBatch();
                conn.close();
            }
            filtrarDatos(null, 4);
        } catch (SQLException ex) {
            System.out.println(ex);
        } catch (NumberFormatException nEx) {
            System.out.println(nEx);
        }
    }

    /**
     * ****************************************************
     * FUNCIONES CREADAS
     **************************************************************
     */
    public void filtrarDatos(String valor, int num) {
        try (Connection conn = DriverManager.getConnection(conexion, user, pass)) {
            switch (num) {
                case 1: {
                    // BUSQUEDA POR PALABRA ESTADO ACTIVO || ENTREGADO
                    String[] titulos = {"No_pedido", "id_RFCliente", "Nombre", "id_RFCAdmn", "Mes", "Dias", "Año",
                        "Total", "Estado"};
                    String[] registros = new String[9];
                    DefaultTableModel modelo = new DefaultTableModel(null, titulos);
                    Statement sts = conn.createStatement();
                    sts.execute(
                            "SELECT * FROM pedido INNER JOIN cliente ON pedido.id_RFCliente = cliente.id_RFCliente WHERE estado LIKE '%"
                            + valor + "%';");
                    ResultSet rs = sts.getResultSet();
                    while (rs.next()) {
                        registros[0] = rs.getString("no_pedido");
                        registros[1] = rs.getString("id_RFCliente");
                        registros[2] = rs.getString("nombre");
                        registros[3] = rs.getString("id_RFCAdmn");
                        registros[4] = rs.getString("mes");
                        registros[5] = rs.getString("dia");
                        registros[6] = rs.getString("anio");
                        registros[7] = rs.getString("total");
                        registros[8] = rs.getString("estado");
                        modelo.addRow(registros);
                    }
                    jTablaConsulta.setModel(modelo);
                    conn.close();
                    break;
                }
                case 2: {
                    String[] titulos = {"No_pedido", "id_RFCliente", "Nombre", "id_RFCAdmn", "Mes", "Dias", "Año",
                        "Total", "Estado"};
                    String[] registros = new String[9];
                    DefaultTableModel modelo = new DefaultTableModel(null, titulos);
                    Statement sts = conn.createStatement();
                    sts.execute(
                            "SELECT * FROM pedido INNER JOIN cliente ON pedido.id_RFCliente = cliente.id_RFCliente WHERE id_RFCAdmn LIKE '%"
                            + valor + "%';");
                    ResultSet rs = sts.getResultSet();
                    while (rs.next()) {
                        registros[0] = rs.getString("no_pedido");
                        registros[1] = rs.getString("id_RFCliente");
                        registros[2] = rs.getString("nombre");
                        registros[3] = rs.getString("id_RFCAdmn");
                        registros[4] = rs.getString("mes");
                        registros[5] = rs.getString("dia");
                        registros[6] = rs.getString("anio");
                        registros[7] = rs.getString("total");
                        registros[8] = rs.getString("estado");
                        modelo.addRow(registros);
                    }
                    jTablaConsulta.setModel(modelo);
                    conn.close();
                    break;
                }
                case 3: {
                    String[] titulos = {"No_pedido", "id_RFCliente", "Nombre", "id_RFCAdmn", "Mes", "Dias", "Año",
                        "Total", "Estado"};
                    String[] registros = new String[9];
                    DefaultTableModel modelo = new DefaultTableModel(null, titulos);
                    Statement sts = conn.createStatement();
                    sts.execute(
                            "SELECT * FROM pedido INNER JOIN cliente ON pedido.id_RFCliente = cliente.id_RFCliente WHERE no_pedido LIKE '%"
                            + valor + "%';");
                    ResultSet rs = sts.getResultSet();
                    while (rs.next()) {
                        registros[0] = rs.getString("no_pedido");
                        registros[1] = rs.getString("id_RFCliente");
                        registros[2] = rs.getString("nombre");
                        registros[3] = rs.getString("id_RFCAdmn");
                        registros[4] = rs.getString("mes");
                        registros[5] = rs.getString("dia");
                        registros[6] = rs.getString("anio");
                        registros[7] = rs.getString("total");
                        registros[8] = rs.getString("estado");
                        modelo.addRow(registros);
                    }
                    jTablaConsulta.setModel(modelo);
                    conn.close();
                    break;
                }
                case 4:
                    String[] titulos = {"No_pedido", "id_RFCliente", "Nombre", "id_RFCAdmn", "Mes", "Dias", "Año",
                        "Total", "Estado"};
                    String[] registros = new String[9];
                    DefaultTableModel modelo = new DefaultTableModel(null, titulos);
                    Statement sts = conn.createStatement();
                    sts.execute("SELECT * FROM pedido INNER JOIN cliente ON pedido.id_RFCliente = cliente.id_RFCliente;");
                    ResultSet rs = sts.getResultSet();
                    while (rs.next()) {
                        registros[0] = rs.getString("no_pedido");
                        registros[1] = rs.getString("id_RFCliente");
                        registros[2] = rs.getString("nombre");
                        registros[3] = rs.getString("id_RFCAdmn");
                        registros[4] = rs.getString("mes");
                        registros[5] = rs.getString("dia");
                        registros[6] = rs.getString("anio");
                        registros[7] = rs.getString("total");
                        registros[8] = rs.getString("estado");
                        modelo.addRow(registros);
                    }
                    jTablaConsulta.setModel(modelo);
                    conn.close();
                    break;
                default:
                    break;
            }
        } catch (SQLException ex) {
            System.out.println(ex);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizarEstado;
    private javax.swing.JComboBox<String> comboBEstado;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTablaConsulta;
    private javax.swing.JTextField txtBusAdmin;
    private javax.swing.JTextField txtBusNoPedido;
    private javax.swing.JTextField txtBusPedido;
    private javax.swing.JTextField txtNo_pedido;
    // End of variables declaration//GEN-END:variables
}
