/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyectolineablanca;

import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Element;
import com.itextpdf.text.FontFactory;
import com.itextpdf.text.Image;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.awt.Desktop;
import java.awt.HeadlessException;
import java.awt.image.BufferedImage;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Date;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.renderer.category.BarRenderer;
import org.jfree.data.category.DefaultCategoryDataset;

/**
 *
 * @author Luis Montoya
 *
 */
public class Reporte extends javax.swing.JInternalFrame {

    /**
     * Creates new form Reporte
     */
    /**
     * ************************************************************
     * VARIABLES *********************************************************
     */
    private final String conexion = "jdbc:mysql://localhost/linea_blanca";
    private final String user = "root";
    private final String pass = "";
    private int registrados = 0, i = 0;
    JFreeChart grafico = null;

    public Reporte() {
        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        comboBModelo = new javax.swing.JComboBox<>();
        btnGGrafico = new javax.swing.JButton();
        btnPDFgrafico = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        comboBmes = new javax.swing.JComboBox<>();
        btnPDFmes = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        comboBproducto = new javax.swing.JComboBox<>();
        btnPDFproducto = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        comboBestado = new javax.swing.JComboBox<>();
        btnPDFestado = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        btnPDFmodelo = new javax.swing.JButton();
        comboBmodelo = new javax.swing.JComboBox<>();
        jPanel3 = new javax.swing.JPanel();
        comboBEstado = new javax.swing.JComboBox<>();
        btnGGrafico1 = new javax.swing.JButton();
        btnPDFgrafico1 = new javax.swing.JButton();

        setClosable(true);
        setMaximizable(true);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "GRAFICOS POR MODELO", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Consolas", 3, 22), new java.awt.Color(51, 0, 0))); // NOI18N

        comboBModelo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "HOR", "EST" }));

        btnGGrafico.setBackground(new java.awt.Color(0, 51, 51));
        btnGGrafico.setForeground(new java.awt.Color(255, 255, 255));
        btnGGrafico.setText("Generar gráfico");
        btnGGrafico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGGraficoActionPerformed(evt);
            }
        });

        btnPDFgrafico.setBackground(new java.awt.Color(0, 102, 102));
        btnPDFgrafico.setForeground(new java.awt.Color(255, 255, 255));
        btnPDFgrafico.setText("Generar PDF gráfico");
        btnPDFgrafico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPDFgraficoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(comboBModelo, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(101, 101, 101)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnGGrafico, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnPDFgrafico, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(89, 89, 89))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(comboBModelo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnGGrafico)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnPDFgrafico)
                .addContainerGap(33, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "PDF", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Consolas", 3, 22), new java.awt.Color(52, 0, 0))); // NOI18N

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "POR MES", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI Emoji", 3, 18), new java.awt.Color(0, 51, 51))); // NOI18N

        comboBmes.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1 - Enero", "2 - Febrero", "3 - Marzo", "4 - Abril", "5 - Mayo", "6 - Junio", "7 - Julio", "8 - Agosto", "9 - Septiembre", "10 - Octubre", "11 - Noviembre", "12 - Diciembre" }));

        btnPDFmes.setBackground(new java.awt.Color(0, 51, 51));
        btnPDFmes.setForeground(new java.awt.Color(255, 255, 255));
        btnPDFmes.setText("Generar PDF");
        btnPDFmes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPDFmesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(comboBmes, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnPDFmes)
                .addGap(75, 75, 75))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(comboBmes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addComponent(btnPDFmes)
                .addContainerGap())
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "POR PRODUCTO", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI Emoji", 3, 18), new java.awt.Color(0, 51, 51))); // NOI18N

        comboBproducto.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "EST - Estufa", "HOR - Horno" }));

        btnPDFproducto.setBackground(new java.awt.Color(0, 51, 51));
        btnPDFproducto.setForeground(new java.awt.Color(255, 255, 255));
        btnPDFproducto.setText("Generar PDF");
        btnPDFproducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPDFproductoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(comboBproducto, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnPDFproducto)
                .addGap(57, 57, 57))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(comboBproducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addComponent(btnPDFproducto)
                .addContainerGap())
        );

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "POR ESTADO", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI Emoji", 3, 18), new java.awt.Color(0, 51, 51))); // NOI18N

        comboBestado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Activo", "Entregado" }));

        btnPDFestado.setBackground(new java.awt.Color(0, 51, 51));
        btnPDFestado.setForeground(new java.awt.Color(255, 255, 255));
        btnPDFestado.setText("Generar PDF");
        btnPDFestado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPDFestadoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(comboBestado, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap(90, Short.MAX_VALUE)
                .addComponent(btnPDFestado)
                .addGap(76, 76, 76))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(comboBestado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addComponent(btnPDFestado)
                .addContainerGap())
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "POR MODELO", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI Emoji", 3, 18), new java.awt.Color(0, 51, 51))); // NOI18N

        btnPDFmodelo.setBackground(new java.awt.Color(0, 51, 51));
        btnPDFmodelo.setForeground(new java.awt.Color(255, 255, 255));
        btnPDFmodelo.setText("Generar PDF");
        btnPDFmodelo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPDFmodeloActionPerformed(evt);
            }
        });

        comboBmodelo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "EST - Estufa", "HOR - Horno" }));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(73, 73, 73)
                .addComponent(btnPDFmodelo)
                .addContainerGap(53, Short.MAX_VALUE))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(comboBmodelo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(comboBmodelo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addComponent(btnPDFmodelo)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "GRAFICO POR ESTADO", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Consolas", 3, 22), new java.awt.Color(51, 0, 0))); // NOI18N

        comboBEstado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Activo", "Entregado", "Activo/Entregado" }));

        btnGGrafico1.setBackground(new java.awt.Color(0, 51, 51));
        btnGGrafico1.setForeground(new java.awt.Color(255, 255, 255));
        btnGGrafico1.setText("Generar gráfico");
        btnGGrafico1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGGrafico1ActionPerformed(evt);
            }
        });

        btnPDFgrafico1.setBackground(new java.awt.Color(0, 102, 102));
        btnPDFgrafico1.setForeground(new java.awt.Color(255, 255, 255));
        btnPDFgrafico1.setText("Generar PDF gráfico");
        btnPDFgrafico1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPDFgrafico1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(99, 99, 99)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(comboBEstado, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnGGrafico1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnPDFgrafico1, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(comboBEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnGGrafico1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnPDFgrafico1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(24, 24, 24)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnGGraficoActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        registrados = 0;
        i = 0;
        try (Connection conn = DriverManager.getConnection(conexion, user, pass)) {
            Statement sts = conn.createStatement();
            sts.execute("SELECT modelo, SUM(cantidad) FROM detallexpedido WHERE modelo LIKE '%"
                    + comboBModelo.getSelectedItem().toString() + "%' GROUP BY modelo;");
            ResultSet rs = sts.getResultSet();
            while (rs.next()) {
                registrados += 1;
            }
            conn.close();
        } catch (SQLException ex) {
            System.out.println(ex);
            System.out.println(ex.getNextException());
        }
        String[][] datos = new String[registrados][2];
        try (Connection conn = DriverManager.getConnection(conexion, user, pass)) {
            Statement sts = conn.createStatement();
            sts.execute("SELECT modelo, SUM(cantidad) FROM detallexpedido WHERE modelo LIKE '%"
                    + comboBModelo.getSelectedItem().toString() + "%' GROUP BY modelo;");
            ResultSet rs = sts.getResultSet();
            while (rs.next()) {
                datos[i][0] = rs.getString("modelo");
                datos[i][1] = rs.getString("SUM(cantidad)");
                i += 1;
            }
            conn.close();
        } catch (SQLException ex) {
            System.out.println(ex);
            System.out.println(ex.getNextException());
        }
        DefaultCategoryDataset valores = new DefaultCategoryDataset();
        for (int z = 0; z < datos.length; z++) {
            valores.addValue(Integer.parseInt(datos[z][1]), "Grafica modelos mas vendidos", datos[z][0]);
        }
        grafico = ChartFactory.createBarChart("Lo mas vendido 2021", "Modelos", "Vendidos", valores,
                PlotOrientation.VERTICAL, true, true, false);
        ChartPanel cPanel = new ChartPanel(grafico);
        JFrame informacion = new JFrame("Grafica");
        informacion.getContentPane().add(cPanel);
        informacion.pack();
        informacion.setVisible(true);
    }

    private void btnPDFgraficoActionPerformed(java.awt.event.ActionEvent evt) {
        registrados = 0;
        i = 0;
        try (Connection conn = DriverManager.getConnection(conexion, user, pass)) {
            Statement sts = conn.createStatement();
            sts.execute("SELECT modelo, SUM(cantidad) FROM detallexpedido WHERE modelo LIKE '%"
                    + comboBModelo.getSelectedItem().toString() + "%' GROUP BY modelo;");
            ResultSet rs = sts.getResultSet();
            while (rs.next()) {
                registrados += 1;
            }
            conn.close();
        } catch (SQLException ex) {
            System.out.println(ex);
            System.out.println(ex.getNextException());
        }
        String[][] datos = new String[registrados][2];
        try (Connection conn = DriverManager.getConnection(conexion, user, pass)) {
            Statement sts = conn.createStatement();
            sts.execute("SELECT modelo, SUM(cantidad) FROM detallexpedido WHERE modelo LIKE '%"
                    + comboBModelo.getSelectedItem().toString() + "%' GROUP BY modelo;");
            ResultSet rs = sts.getResultSet();
            while (rs.next()) {
                datos[i][0] = rs.getString("modelo");
                datos[i][1] = rs.getString("SUM(cantidad)");
                i += 1;
            }
            conn.close();
        } catch (SQLException ex) {
            System.out.println(ex);
            System.out.println(ex.getNextException());
        }
        DefaultCategoryDataset valores = new DefaultCategoryDataset();
        for (int z = 0; z < datos.length; z++) {
            valores.addValue(Integer.parseInt(datos[z][1]), "Grafica modelos mas vendidos", datos[z][0]);
        }
        grafico = ChartFactory.createBarChart("Lo mas vendido 2021", "Modelos", "Vendidos", valores,
                PlotOrientation.VERTICAL, true, true, false);
        writeChartToPDF(grafico);
    }

    private void btnGGrafico1ActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        registrados = 0;
        i = 0;
        if (comboBEstado.getSelectedItem().toString().equals("Activo/Entregado")) {
            try (Connection conn = DriverManager.getConnection(conexion, user, pass)) {
                Statement sts = conn.createStatement();
                sts.execute("SELECT estado, COUNT(*) FROM pedido GROUP BY estado;");
                ResultSet rs = sts.getResultSet();
                while (rs.next()) {
                    registrados += 1;
                }
                conn.close();
            } catch (SQLException ex) {
                System.out.println(ex);
                System.out.println(ex.getNextException());
            }
            String[][] datos = new String[registrados][2];
            try (Connection conn = DriverManager.getConnection(conexion, user, pass)) {
                Statement sts = conn.createStatement();
                sts.execute("SELECT estado, COUNT(*) FROM pedido GROUP BY estado;");
                ResultSet rs = sts.getResultSet();
                while (rs.next()) {
                    datos[i][0] = rs.getString("estado");
                    datos[i][1] = rs.getString("COUNT(*)");
                    i += 1;
                }
                conn.close();
            } catch (SQLException ex) {
                System.out.println(ex);
                System.out.println(ex.getNextException());
            }
            DefaultCategoryDataset valores = new DefaultCategoryDataset();
            for (int z = 0; z < datos.length; z++) {
                valores.addValue(Integer.parseInt(datos[z][1]), "Grafica estado de pedidos", datos[z][0]);
            }
            grafico = ChartFactory.createBarChart("Estado pedidos", "Estado", "Datos", valores, PlotOrientation.VERTICAL, true, true, false);
            CategoryPlot categoryPlot = grafico.getCategoryPlot();
            BarRenderer br = (BarRenderer) categoryPlot.getRenderer();
            br.setMaximumBarWidth(.35);

            ChartPanel cPanel = new ChartPanel(grafico);
            JFrame informacion = new JFrame("Grafica");
            informacion.getContentPane().add(cPanel);
            informacion.pack();
            informacion.setVisible(true);
        } else {
            try (Connection conn = DriverManager.getConnection(conexion, user, pass)) {
                Statement sts = conn.createStatement();
                sts.execute("SELECT estado, COUNT(*) FROM pedido WHERE estado LIKE '%" + comboBEstado.getSelectedItem().toString() + "%' GROUP BY estado;");
                ResultSet rs = sts.getResultSet();
                while (rs.next()) {
                    registrados += 1;
                }
                conn.close();
            } catch (SQLException ex) {
                System.out.println(ex);
                System.out.println(ex.getNextException());
            }
            String[][] datos = new String[registrados][2];
            try (Connection conn = DriverManager.getConnection(conexion, user, pass)) {
                Statement sts = conn.createStatement();
                sts.execute("SELECT estado, COUNT(*) FROM pedido WHERE estado LIKE '%" + comboBEstado.getSelectedItem().toString() + "%' GROUP BY estado;");
                ResultSet rs = sts.getResultSet();
                while (rs.next()) {
                    datos[i][0] = rs.getString("estado");
                    datos[i][1] = rs.getString("COUNT(*)");
                    i += 1;
                }
                conn.close();
            } catch (SQLException ex) {
                System.out.println(ex);
                System.out.println(ex.getNextException());
            }
            DefaultCategoryDataset valores = new DefaultCategoryDataset();
            for (int z = 0; z < datos.length; z++) {
                valores.addValue(Integer.parseInt(datos[z][1]), "Grafica estado de pedidos", datos[z][0]);
            }
            grafico = ChartFactory.createBarChart("Estado pedidos", "Estado", "Datos", valores, PlotOrientation.VERTICAL, true, true, false);
            CategoryPlot categoryPlot = grafico.getCategoryPlot();
            BarRenderer br = (BarRenderer) categoryPlot.getRenderer();
            br.setMaximumBarWidth(.35);

            ChartPanel cPanel = new ChartPanel(grafico);
            JFrame informacion = new JFrame("Grafica");
            informacion.getContentPane().add(cPanel);
            informacion.pack();
            informacion.setVisible(true);
        }
    }

    private void btnPDFgrafico1ActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        registrados = 0;
        i = 0;
        if (comboBEstado.getSelectedItem().toString().equals("Activo/Entregado")) {
            try (Connection conn = DriverManager.getConnection(conexion, user, pass)) {
                Statement sts = conn.createStatement();
                sts.execute("SELECT estado, COUNT(*) FROM pedido GROUP BY estado;");
                ResultSet rs = sts.getResultSet();
                while (rs.next()) {
                    registrados += 1;
                }
                conn.close();
            } catch (SQLException ex) {
                System.out.println(ex);
                System.out.println(ex.getNextException());
            }
            String[][] datos = new String[registrados][2];
            try (Connection conn = DriverManager.getConnection(conexion, user, pass)) {
                Statement sts = conn.createStatement();
                sts.execute("SELECT estado, COUNT(*) FROM pedido GROUP BY estado;");
                ResultSet rs = sts.getResultSet();
                while (rs.next()) {
                    datos[i][0] = rs.getString("estado");
                    datos[i][1] = rs.getString("COUNT(*)");
                    i += 1;
                }
                conn.close();
            } catch (SQLException ex) {
                System.out.println(ex);
                System.out.println(ex.getNextException());
            }
            DefaultCategoryDataset valores = new DefaultCategoryDataset();
            for (int z = 0; z < datos.length; z++) {
                valores.addValue(Integer.parseInt(datos[z][1]), "Grafica estado de pedidos", datos[z][0]);
            }
            grafico = ChartFactory.createBarChart("Estado pedidos", "Estado", "Datos", valores, PlotOrientation.VERTICAL,
                    true, true, false);
            CategoryPlot categoryPlot = grafico.getCategoryPlot();
            BarRenderer br = (BarRenderer) categoryPlot.getRenderer();
            br.setMaximumBarWidth(.35);
            writeChartToPDF(grafico);
        } else {
            try (Connection conn = DriverManager.getConnection(conexion, user, pass)) {
                Statement sts = conn.createStatement();
                sts.execute("SELECT estado, COUNT(*) FROM pedido WHERE estado LIKE '%"
                        + comboBEstado.getSelectedItem().toString() + "%' GROUP BY estado;");
                ResultSet rs = sts.getResultSet();
                while (rs.next()) {
                    registrados += 1;
                }
                conn.close();
            } catch (SQLException ex) {
                System.out.println(ex);
                System.out.println(ex.getNextException());
            }
            String[][] datos = new String[registrados][2];
            try (Connection conn = DriverManager.getConnection(conexion, user, pass)) {
                Statement sts = conn.createStatement();
                sts.execute("SELECT estado, COUNT(*) FROM pedido WHERE estado LIKE '%"
                        + comboBEstado.getSelectedItem().toString() + "%' GROUP BY estado;");
                ResultSet rs = sts.getResultSet();
                while (rs.next()) {
                    datos[i][0] = rs.getString("estado");
                    datos[i][1] = rs.getString("COUNT(*)");
                    i += 1;
                }
                conn.close();
            } catch (SQLException ex) {
                System.out.println(ex);
                System.out.println(ex.getNextException());
            }
            DefaultCategoryDataset valores = new DefaultCategoryDataset();
            for (int z = 0; z < datos.length; z++) {
                valores.addValue(Integer.parseInt(datos[z][1]), "Grafica estado de pedidos", datos[z][0]);
            }
            grafico = ChartFactory.createBarChart("Estado pedidos", "Estado", "Datos", valores, PlotOrientation.VERTICAL,
                    true, true, false);
            CategoryPlot categoryPlot = grafico.getCategoryPlot();
            BarRenderer br = (BarRenderer) categoryPlot.getRenderer();
            br.setMaximumBarWidth(.35);
            writeChartToPDF(grafico);
        }
    }

    private void btnPDFproductoActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        Document doc = new Document();
        try {
            String ruta = System.getProperty("user.home");
            PdfWriter.getInstance(doc, new FileOutputStream(ruta
                    + "/Documents/Universidad4/Programacion_III/NetBeansProjects/proyectoLineaBlanca/pdfGuardado/ReporteProducto.pdf"));
            Image imagen = Image.getInstance("src/proyectolineablanca/fondoPDF.jpeg");
            doc.open();
            doc.add(new Paragraph("\n\n\n\n\n\n\n"));
            doc.add(new Paragraph("TABLA DE DATOS\n\n", FontFactory.getFont("Consolas", 18, BaseColor.BLACK)));
            doc.add(new Paragraph("\n"));
            doc.add(new Paragraph("                Pedidos por producto                                     " + new Date().toString()));
            doc.add(new Paragraph(
                    "----------------------------------------------------------------------------------------------------------------------------------\n\n"));
            imagen.scaleAbsoluteHeight(850f);
            imagen.scaleAbsoluteWidth(600f);
            imagen.setAbsolutePosition(0f, 0f);
            doc.add(imagen);
            PdfPTable tab = new PdfPTable(3);
            tab.addCell("No. pedido");
            tab.addCell("Modelo");
            tab.addCell("Cantidad");
            String clave = comboBproducto.getSelectedItem().toString().substring(0, 3);
            try (Connection conn = DriverManager.getConnection(conexion, user, pass)) {
                Statement sts = conn.createStatement();
                sts.execute("SELECT * FROM detallexpedido WHERE modelo LIKE '%" + clave + "%' ORDER BY modelo;");
                ResultSet rs = sts.getResultSet();
                if (rs.next()) {
                    do {
                        tab.addCell(rs.getString(2));
                        tab.addCell(rs.getString(3));
                        tab.addCell(rs.getString(4));
                    } while (rs.next());
                    doc.add(tab);
                }
                conn.close();
            } catch (DocumentException | SQLException ex) {
                System.out.println(ex);
            }
            doc.close();
            JOptionPane.showMessageDialog(null, "Reporte creado");
        } catch (DocumentException | HeadlessException | FileNotFoundException ex) {
            System.out.println(ex);
        } catch (IOException exx) {
            System.out.println(exx);
        }
        Path path = Paths.get(
                "C:/Users/Luis Montoya/Documents/Universidad4/Programacion_III/NetBeansProjects/proyectoLineaBlanca/pdfGuardado",
                "ReporteProducto.pdf");
        if (!Files.exists(path)) {
            System.out.printf("el archivo < %s > no existe", path.toString());
        } else {
            try {
                Desktop.getDesktop().open(path.toFile());
            } catch (IOException ex) {
                System.out.println(ex);
            }
        }
    }

    private void btnPDFestadoActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        Document doc = new Document();
        try {
            String ruta = System.getProperty("user.home");
            PdfWriter.getInstance(doc, new FileOutputStream(ruta
                    + "/Documents/Universidad4/Programacion_III/NetBeansProjects/proyectoLineaBlanca/pdfGuardado/ReporteEstado.pdf"));
            Image imagen = Image.getInstance("src/proyectolineablanca/fondoPDF.jpeg");
            doc.open();
            doc.add(new Paragraph("\n\n\n\n\n\n\n"));
            doc.add(new Paragraph("TABLA DE DATOS\n\n", FontFactory.getFont("Consolas", 18, BaseColor.BLACK)));
            doc.add(new Paragraph("\n"));
            doc.add(new Paragraph("                Pedidos por estado                                       " + new Date().toString()));
            doc.add(new Paragraph(
                    "----------------------------------------------------------------------------------------------------------------------------------\n\n"));
            imagen.scaleAbsoluteHeight(850f);
            imagen.scaleAbsoluteWidth(600f);
            imagen.setAbsolutePosition(0f, 0f);
            doc.add(imagen);
            PdfPTable tab = new PdfPTable(4);
            tab.addCell("No. pedido");
            tab.addCell("Id. RFC cliente");
            tab.addCell("Nombre");
            tab.addCell("Estado");
            String clave = comboBestado.getSelectedItem().toString();
            try (Connection conn = DriverManager.getConnection(conexion, user, pass)) {
                Statement sts = conn.createStatement();
                sts.execute(
                        "SELECT * FROM pedido INNER JOIN cliente ON pedido.id_RFCliente = cliente.id_RFCliente WHERE estado ='"
                        + clave + "';");
                ResultSet rs = sts.getResultSet();
                if (rs.next()) {
                    do {
                        tab.addCell(rs.getString(1));
                        tab.addCell(rs.getString(2));
                        tab.addCell(rs.getString(10));
                        tab.addCell(rs.getString(8));
                    } while (rs.next());
                    doc.add(tab);
                }
                conn.close();
            } catch (DocumentException | SQLException ex) {
                System.out.println(ex);
            }
            doc.close();
            JOptionPane.showMessageDialog(null, "Reporte creado");
        } catch (DocumentException | HeadlessException | FileNotFoundException ex) {
            System.out.println(ex);
        } catch (IOException exx) {
            System.out.println(exx);
        }
        Path path = Paths.get(
                "C:/Users/Luis Montoya/Documents/Universidad4/Programacion_III/NetBeansProjects/proyectoLineaBlanca/pdfGuardado",
                "ReporteEstado.pdf");
        if (!Files.exists(path)) {
            System.out.printf("el archivo < %s > no existe", path.toString());
        } else {
            try {
                Desktop.getDesktop().open(path.toFile());
            } catch (IOException ex) {
                System.out.println(ex);
            }
        }
    }

    private void btnPDFmesActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        Document doc = new Document();
        try {
            String ruta = System.getProperty("user.home");
            PdfWriter.getInstance(doc, new FileOutputStream(ruta
                    + "/Documents/Universidad4/Programacion_III/NetBeansProjects/proyectoLineaBlanca/pdfGuardado/ReporteMes.pdf"));
            Image imagen = Image.getInstance("src/proyectolineablanca/fondoPDF.jpeg");
            doc.open();
            doc.add(new Paragraph("\n\n\n\n\n\n\n"));
            doc.add(new Paragraph("TABLA DE DATOS\n\n", FontFactory.getFont("Consolas", 18, BaseColor.BLACK)));
            doc.add(new Paragraph("\n"));
            doc.add(new Paragraph("                   Pedidos por mes                                       " + new Date().toString()));
            doc.add(new Paragraph(
                    "----------------------------------------------------------------------------------------------------------------------------------\n\n"));
            imagen.scaleAbsoluteHeight(850f);
            imagen.scaleAbsoluteWidth(600f);
            imagen.setAbsolutePosition(0f, 0f);
            doc.add(imagen);
            PdfPTable tab = new PdfPTable(4);
            tab.addCell("Mes");
            tab.addCell("No. pedido");
            tab.addCell("Id. RFC cliente");
            tab.addCell("Nombre");
            String clave = comboBmes.getSelectedItem().toString().substring(0, 1);
            try (Connection conn = DriverManager.getConnection(conexion, user, pass)) {
                Statement sts = conn.createStatement();
                sts.execute(
                        "SELECT * FROM pedido INNER JOIN cliente ON pedido.id_RFCliente = cliente.id_RFCliente WHERE mes ='"
                        + clave + "';");
                ResultSet rs = sts.getResultSet();
                if (rs.next()) {
                    do {
                        tab.addCell(rs.getString(4));
                        tab.addCell(rs.getString(1));
                        tab.addCell(rs.getString(2));
                        tab.addCell(rs.getString(10));
                    } while (rs.next());
                    doc.add(tab);
                }
                conn.close();
            } catch (DocumentException | SQLException ex) {
                System.out.println(ex);
            }
            doc.close();
            JOptionPane.showMessageDialog(null, "Reporte creado");
        } catch (DocumentException | HeadlessException | FileNotFoundException ex) {
            System.out.println(ex);
        } catch (IOException exx) {
            System.out.println(exx);
        }
        Path path = Paths.get(
                "C:/Users/Luis Montoya/Documents/Universidad4/Programacion_III/NetBeansProjects/proyectoLineaBlanca/pdfGuardado",
                "ReporteMes.pdf");
        if (!Files.exists(path)) {
            System.out.printf("el archivo < %s > no existe", path.toString());
        } else {
            try {
                Desktop.getDesktop().open(path.toFile());
            } catch (IOException ex) {
                System.out.println(ex);
            }
        }
    }

    private void btnPDFmodeloActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        Document doc = new Document();
        try {
            String ruta = System.getProperty("user.home");
            PdfWriter.getInstance(doc, new FileOutputStream(ruta
                    + "/Documents/Universidad4/Programacion_III/NetBeansProjects/proyectoLineaBlanca/pdfGuardado/ReporteModelo.pdf"));
            Image imagen = Image.getInstance("src/proyectolineablanca/fondoPDF.jpeg");
            doc.open();
            doc.add(new Paragraph("\n\n\n\n\n\n\n"));
            doc.add(new Paragraph("TABLA DE DATOS\n\n", FontFactory.getFont("Consolas", 18, BaseColor.BLACK)));
            doc.add(new Paragraph("\n"));
            doc.add(new Paragraph("                Pedidos por modelo                                       " + new Date().toString()));
            doc.add(new Paragraph(
                    "----------------------------------------------------------------------------------------------------------------------------------\n\n"));
            imagen.scaleAbsoluteHeight(850f);
            imagen.scaleAbsoluteWidth(600f);
            imagen.setAbsolutePosition(0f, 0f);
            doc.add(imagen);
            PdfPTable tab = new PdfPTable(2);
            tab.addCell("Modelo");
            tab.addCell("Total");
            String clave = comboBmodelo.getSelectedItem().toString().substring(0, 3);
            try (Connection conn = DriverManager.getConnection(conexion, user, pass)) {
                Statement sts = conn.createStatement();
                sts.execute("SELECT modelo, COUNT(*) FROM detallexpedido WHERE modelo LIKE '%" + clave + "%' GROUP BY modelo;");
                ResultSet rs = sts.getResultSet();
                if (rs.next()) {
                    do {
                        tab.addCell(rs.getString(1));
                        tab.addCell(rs.getString(2));
                    } while (rs.next());
                    doc.add(tab);
                }
                conn.close();
            } catch (DocumentException | SQLException ex) {
                System.out.println(ex);
            }
            doc.close();
            JOptionPane.showMessageDialog(null, "Reporte creado");
        } catch (DocumentException | HeadlessException | FileNotFoundException ex) {
            System.out.println(ex);
        } catch (IOException exx) {
            System.out.println(exx);
        }
        Path path = Paths.get(
                "C:/Users/Luis Montoya/Documents/Universidad4/Programacion_III/NetBeansProjects/proyectoLineaBlanca/pdfGuardado",
                "ReporteModelo.pdf");
        if (!Files.exists(path)) {
            System.out.printf("el archivo < %s > no existe", path.toString());
        } else {
            try {
                Desktop.getDesktop().open(path.toFile());
            } catch (IOException ex) {
                System.out.println(ex);
            }
        }
    }

    /**
     * ****************************************************
     * FUNCIONES CREADAS
     * *************************************************************
     */
    public static void writeChartToPDF(JFreeChart chartt) {
        Document document = null;
        PdfWriter writer = null;
        try {
            document = new Document();
            String ruta = System.getProperty("user.home");
            writer = PdfWriter.getInstance(document, new FileOutputStream(ruta
                    + "/Documents/Universidad4/Programacion_III/NetBeansProjects/proyectoLineaBlanca/pdfGuardado/ReporteGrafico.pdf"));
            Image imagen = Image.getInstance("src/proyectolineablanca/fondoPDF.jpeg");
            document.open();
            document.add(new Paragraph("\n\n\n\n\n\n\n"));
            document.add(new Paragraph("                                    GRAFICO DE DATOS\n\n", FontFactory.getFont("Consolas", 18, BaseColor.BLACK)));
            document.add(new Paragraph("                                                                                " + new Date().toString()));
            document.add(new Paragraph("\n\n"));
            imagen.scaleAbsoluteHeight(850f);
            imagen.scaleAbsoluteWidth(600f);
            imagen.setAbsolutePosition(0f, 0f);
            document.add(imagen);
            int width = 500;
            int height = 300;
            JFreeChart chart = chartt;
            BufferedImage bufferedImage = chart.createBufferedImage(width, height);
            Image image = Image.getInstance(writer, bufferedImage, 1.0f);
            document.add(image);
            document.close();
            document = null;
            writer.close();
            writer = null;
            JOptionPane.showMessageDialog(null, "PDF generado");
        } catch (DocumentException de) {
            System.out.println(de);
        } catch (IOException ioe) {
            System.out.println(ioe);
        }

        Path path = Paths.get(
                "C:/Users/Luis Montoya/Documents/Universidad4/Programacion_III/NetBeansProjects/proyectoLineaBlanca/pdfGuardado",
                "ReporteGrafico.pdf");
        if (!Files.exists(path)) {
            System.out.printf("el archivo < %s > no existe", path.toString());
        } else {
            try {
                Desktop.getDesktop().open(path.toFile());
            } catch (IOException ex) {
                System.out.println(ex);
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGGrafico;
    private javax.swing.JButton btnGGrafico1;
    private javax.swing.JButton btnPDFestado;
    private javax.swing.JButton btnPDFgrafico;
    private javax.swing.JButton btnPDFgrafico1;
    private javax.swing.JButton btnPDFmes;
    private javax.swing.JButton btnPDFmodelo;
    private javax.swing.JButton btnPDFproducto;
    private javax.swing.JComboBox<String> comboBEstado;
    private javax.swing.JComboBox<String> comboBModelo;
    private javax.swing.JComboBox<String> comboBestado;
    private javax.swing.JComboBox<String> comboBmes;
    private javax.swing.JComboBox<String> comboBmodelo;
    private javax.swing.JComboBox<String> comboBproducto;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    // End of variables declaration//GEN-END:variables
}
