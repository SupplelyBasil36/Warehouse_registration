/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyectolineablanca;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Luis Montoya Moreno 172315
 * @author Lucio López Aquino 172951
 */
public class AlmacenConAct extends javax.swing.JInternalFrame {

    /**
     * Creates new form Consulta
     */
    /**
     * ************************************************************
     * VARIABLES *********************************************************
     */
    private final String conexion = "jdbc:mysql://localhost/linea_blanca";
    private final String user = "root";
    private final String pass = "";
    private String seleccion, seleccionE;

    /**
     * *******************************************************************************************************************************
     */
    public AlmacenConAct() {
        initComponents();
        refrescarTabla();
        if (InicioSesion.estadoUsuario.equals("Inactivo")) {
            btnActualizar.setEnabled(false);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated">
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        JScrollPane1 = new javax.swing.JScrollPane();
        tablaAlmacen = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex,int columnIndex){return false;}
        };
        jLabel2 = new javax.swing.JLabel();
        comboBModelos = new javax.swing.JComboBox<>();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel3 = new javax.swing.JLabel();
        txtAModelo = new javax.swing.JTextField();
        txtAExistencia = new javax.swing.JTextField();
        txtAPrecio = new javax.swing.JTextField();
        txtAUbicacion = new javax.swing.JTextField();
        btnActualizar = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        txtBusquedaModeloE = new javax.swing.JTextField();

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);

        jLabel1.setFont(new java.awt.Font("Consolas", 1, 18)); // NOI18N
        jLabel1.setText("CONSULTA DE ALMACÉN");

        tablaAlmacen.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tablaAlmacen.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaAlmacenMouseClicked(evt);
            }
        });
        JScrollPane1.setViewportView(tablaAlmacen);

        jLabel2.setText("Consultar por:");

        comboBModelos.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "EST", "HOR" }));
        comboBModelos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBModelosActionPerformed(evt);
            }
        });

        jLabel3.setText("ACTUALIZAR DATO:");

        txtAExistencia.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtAExistenciaKeyReleased(evt);
            }
        });

        txtAPrecio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtAPrecioKeyReleased(evt);
            }
        });

        btnActualizar.setBackground(new java.awt.Color(0, 51, 51));
        btnActualizar.setForeground(new java.awt.Color(255, 255, 255));
        btnActualizar.setText("Actualizar");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        jLabel4.setText("Consultar por modelo especifico:");

        txtBusquedaModeloE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBusquedaModeloEActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jSeparator1)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addGap(307, 307, 307))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(comboBModelos, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(txtBusquedaModeloE))
                        .addGap(18, 18, 18)
                        .addComponent(JScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
            .addGroup(layout.createSequentialGroup()
                .addGap(325, 325, 325)
                .addComponent(jLabel3)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtAModelo, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addComponent(txtAExistencia, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(txtAPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(txtAUbicacion, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(32, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnActualizar)
                .addGap(340, 340, 340))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(JScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(comboBModelos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(38, 38, 38)
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(txtBusquedaModeloE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtAModelo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtAExistencia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtAPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtAUbicacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnActualizar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtAExistenciaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAExistenciaKeyReleased
        // TODO add your handling code here:
        if (evt.getKeyCode() == 109) {
            txtAExistencia.setText("");
        }
    }//GEN-LAST:event_txtAExistenciaKeyReleased

    private void txtAPrecioKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAPrecioKeyReleased
        // TODO add your handling code here:
        if (evt.getKeyCode() == 109) {
            txtAPrecio.setText("");
        }
    }//GEN-LAST:event_txtAPrecioKeyReleased

    private void comboBModelosActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_comboBModelosActionPerformed
        // TODO add your handling code here:
        seleccion = comboBModelos.getSelectedItem().toString();
        refrescarTabla();
    }

    private void tablaAlmacenMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_tablaAlmacenMouseClicked
        // TODO add your handling code here:
        txtAModelo.setEditable(false);
        Object valor_constante = tablaAlmacen.getValueAt(tablaAlmacen.getSelectedRow(), 0);
        System.out.println(valor_constante);
        try (Connection conn = DriverManager.getConnection(conexion, user, pass)) {
            Statement sts = conn.createStatement();
            sts.execute("SELECT * FROM almacen WHERE modelo = '" + String.valueOf(valor_constante) + "';");
            ResultSet rs = sts.getResultSet();
            if (rs.next()) {
                txtAModelo.setText(rs.getString("modelo"));
                txtAExistencia.setText(rs.getString("cant_Exist"));
                txtAPrecio.setText(rs.getString("precio_uni"));
                txtAUbicacion.setText(rs.getString("ubicacion"));
            }
            conn.close();
        } catch (SQLException ex) {
            System.out.println(ex.getNextException());
        }
    }

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnActualizarActionPerformed
        // TODO add your handling code here:
        try (Connection conn = DriverManager.getConnection(conexion, user, pass)) {
            Statement sts = conn.createStatement();
            try {
                String update = "UPDATE almacen set modelo = '" + txtAModelo.getText() + "', cant_Exist = "
                        + Integer.parseInt(txtAExistencia.getText()) + ", precio_uni ="
                        + Integer.parseInt(txtAPrecio.getText()) + ", ubicacion = '" + txtAUbicacion.getText()
                        + "' WHERE modelo = '" + txtAModelo.getText() + "';";
                sts.executeUpdate(update);
                conn.close();
                JOptionPane.showMessageDialog(null, "Datos actualizados");
                refrescarTabla();
            } catch (NumberFormatException err) {
                JOptionPane.showMessageDialog(null, "Datos ingresados incorrectos, verifica por favor");
            }

        } catch (SQLException ex) {
            System.out.println(ex.getNextException());
        }
        txtAModelo.setText("");
        txtAExistencia.setText("");
        txtAPrecio.setText("");
        txtAUbicacion.setText("");
    }

    private void txtBusquedaModeloEActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_txtBusquedaModeloEActionPerformed
        // TODO add your handling code here:
        seleccionE = txtBusquedaModeloE.getText().toUpperCase();
        DefaultTableModel model = new DefaultTableModel();
        ArrayList<ArrayList<Object>> lista = new ArrayList<>();
        Object datos[] = new Object[4];
        int i = 0;
        model.addColumn("Modelo");
        model.addColumn("Total, en existencia");
        model.addColumn("Precio unitario");
        model.addColumn("Ubicación en almacén");
        this.tablaAlmacen.setModel(model);
        System.out.println("Entro seleccion");
        try (Connection conn = DriverManager.getConnection(conexion, user, pass)) {
            Statement sts = conn.createStatement();
            sts.execute("SELECT * FROM almacen WHERE modelo = '" + seleccionE + "';");
            ResultSet rs = sts.getResultSet();
            while (rs.next()) {
                lista.add(new ArrayList<>());
                lista.get(i).add(rs.getString("modelo"));
                lista.get(i).add(rs.getInt("cant_Exist"));
                lista.get(i).add(rs.getInt("precio_uni"));
                lista.get(i).add(rs.getString("ubicacion"));
                i++;
            }
            for (int j = 0; j < lista.size(); j++) {
                datos[0] = lista.get(j).get(0);
                datos[1] = lista.get(j).get(1);
                datos[2] = lista.get(j).get(2);
                datos[3] = lista.get(j).get(3);
                model.addRow(datos);
            }
            conn.close();
        } catch (SQLException ex) {
            System.out.println(ex.getNextException());
        }
        txtBusquedaModeloE.setText("");
    }

    /**
     * ****************************************************
     * FUNCIONES CREADAS
     * *************************************************************
     */
    /**
     * @param args the command line arguments
     */
    public void refrescarTabla() {
        DefaultTableModel model = new DefaultTableModel();
        ArrayList<ArrayList<Object>> lista = new ArrayList<>();
        Object datos[] = new Object[4];
        int i = 0;
        model.addColumn("Modelo");
        model.addColumn("Total, en existencia");
        model.addColumn("Precio unitario");
        model.addColumn("Ubicación en almacén");
        this.tablaAlmacen.setModel(model);

        if (seleccion != null) {
            System.out.println("Entro seleccion");
            try (Connection conn = DriverManager.getConnection(conexion, user, pass)) {
                Statement sts = conn.createStatement();
                sts.execute("SELECT * FROM almacen WHERE modelo LIKE '%" + seleccion + "%';");
                ResultSet rs = sts.getResultSet();
                while (rs.next()) {
                    lista.add(new ArrayList<>());
                    lista.get(i).add(rs.getString("modelo"));
                    lista.get(i).add(rs.getInt("cant_Exist"));
                    lista.get(i).add(rs.getInt("precio_uni"));
                    lista.get(i).add(rs.getString("ubicacion"));
                    i++;
                }
                for (int j = 0; j < lista.size(); j++) {
                    datos[0] = lista.get(j).get(0);
                    datos[1] = lista.get(j).get(1);
                    datos[2] = lista.get(j).get(2);
                    datos[3] = lista.get(j).get(3);
                    model.addRow(datos);
                }
                conn.close();
            } catch (SQLException ex) {
                System.out.println(ex.getNextException());
            }
        } else {
            try (Connection conn = DriverManager.getConnection(conexion, user, pass)) {
                Statement sts = conn.createStatement();
                sts.execute("SELECT * FROM almacen GROUP BY modelo;");
                ResultSet rs = sts.getResultSet();
                while (rs.next()) {
                    lista.add(new ArrayList<>());
                    lista.get(i).add(rs.getString("modelo"));
                    lista.get(i).add(rs.getInt("cant_Exist"));
                    lista.get(i).add(rs.getInt("precio_uni"));
                    lista.get(i).add(rs.getString("ubicacion"));
                    i++;
                }
                for (int j = 0; j < lista.size(); j++) {
                    datos[0] = lista.get(j).get(0);
                    datos[1] = lista.get(j).get(1);
                    datos[2] = lista.get(j).get(2);
                    datos[3] = lista.get(j).get(3);
                    model.addRow(datos);
                }
                conn.close();
            } catch (SQLException ex) {
                System.out.println(ex.getNextException());
            }
        }

    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        // <editor-fold defaultstate="collapsed" desc=" Look and feel setting code">
        // (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the default
         * look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AlmacenConAct.class.getName()).log(java.util.logging.Level.SEVERE, null,
                    ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AlmacenConAct.class.getName()).log(java.util.logging.Level.SEVERE, null,
                    ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AlmacenConAct.class.getName()).log(java.util.logging.Level.SEVERE, null,
                    ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AlmacenConAct.class.getName()).log(java.util.logging.Level.SEVERE, null,
                    ex);
        }
        // </editor-fold>
        // </editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AlmacenConAct().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane JScrollPane1;
    private javax.swing.JButton btnActualizar;
    private javax.swing.JComboBox<String> comboBModelos;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable tablaAlmacen;
    private javax.swing.JTextField txtAExistencia;
    private javax.swing.JTextField txtAModelo;
    private javax.swing.JTextField txtAPrecio;
    private javax.swing.JTextField txtAUbicacion;
    private javax.swing.JTextField txtBusquedaModeloE;
    // End of variables declaration//GEN-END:variables
}
